//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RealTimeUnit.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="functionType", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    public enum functionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cos = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ramp = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Triangle = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rectangle = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RealTimeUnit.ServiceReference1.DITag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RealTimeUnit.ServiceReference1.DOTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RealTimeUnit.ServiceReference1.AITag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RealTimeUnit.ServiceReference1.AOTag))]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RealTimeUnit.ServiceReference1.Driver driverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ioAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tagIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RealTimeUnit.ServiceReference1.Driver driver {
            get {
                return this.driverField;
            }
            set {
                if ((this.driverField.Equals(value) != true)) {
                    this.driverField = value;
                    this.RaisePropertyChanged("driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ioAddress {
            get {
                return this.ioAddressField;
            }
            set {
                if ((this.ioAddressField.Equals(value) != true)) {
                    this.ioAddressField = value;
                    this.RaisePropertyChanged("ioAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tagId {
            get {
                return this.tagIdField;
            }
            set {
                if ((object.ReferenceEquals(this.tagIdField, value) != true)) {
                    this.tagIdField = value;
                    this.RaisePropertyChanged("tagId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DITag", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    [System.SerializableAttribute()]
    public partial class DITag : RealTimeUnit.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RealTimeUnit.ServiceReference1.Alarm alarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool autoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool onField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scanTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RealTimeUnit.ServiceReference1.Alarm alarm {
            get {
                return this.alarmField;
            }
            set {
                if ((object.ReferenceEquals(this.alarmField, value) != true)) {
                    this.alarmField = value;
                    this.RaisePropertyChanged("alarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool auto {
            get {
                return this.autoField;
            }
            set {
                if ((this.autoField.Equals(value) != true)) {
                    this.autoField = value;
                    this.RaisePropertyChanged("auto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool on {
            get {
                return this.onField;
            }
            set {
                if ((this.onField.Equals(value) != true)) {
                    this.onField = value;
                    this.RaisePropertyChanged("on");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int scanTime {
            get {
                return this.scanTimeField;
            }
            set {
                if ((this.scanTimeField.Equals(value) != true)) {
                    this.scanTimeField = value;
                    this.RaisePropertyChanged("scanTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DOTag", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    [System.SerializableAttribute()]
    public partial class DOTag : RealTimeUnit.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int initialValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int initialValue {
            get {
                return this.initialValueField;
            }
            set {
                if ((this.initialValueField.Equals(value) != true)) {
                    this.initialValueField = value;
                    this.RaisePropertyChanged("initialValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AITag", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    [System.SerializableAttribute()]
    public partial class AITag : RealTimeUnit.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RealTimeUnit.ServiceReference1.Alarm alarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool autoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int highField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool onField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scanTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RealTimeUnit.ServiceReference1.Alarm alarm {
            get {
                return this.alarmField;
            }
            set {
                if ((object.ReferenceEquals(this.alarmField, value) != true)) {
                    this.alarmField = value;
                    this.RaisePropertyChanged("alarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool auto {
            get {
                return this.autoField;
            }
            set {
                if ((this.autoField.Equals(value) != true)) {
                    this.autoField = value;
                    this.RaisePropertyChanged("auto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int high {
            get {
                return this.highField;
            }
            set {
                if ((this.highField.Equals(value) != true)) {
                    this.highField = value;
                    this.RaisePropertyChanged("high");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int low {
            get {
                return this.lowField;
            }
            set {
                if ((this.lowField.Equals(value) != true)) {
                    this.lowField = value;
                    this.RaisePropertyChanged("low");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool on {
            get {
                return this.onField;
            }
            set {
                if ((this.onField.Equals(value) != true)) {
                    this.onField = value;
                    this.RaisePropertyChanged("on");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int scanTime {
            get {
                return this.scanTimeField;
            }
            set {
                if ((this.scanTimeField.Equals(value) != true)) {
                    this.scanTimeField = value;
                    this.RaisePropertyChanged("scanTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                if ((object.ReferenceEquals(this.unitsField, value) != true)) {
                    this.unitsField = value;
                    this.RaisePropertyChanged("units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AOTag", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    [System.SerializableAttribute()]
    public partial class AOTag : RealTimeUnit.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int highField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int initialValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int high {
            get {
                return this.highField;
            }
            set {
                if ((this.highField.Equals(value) != true)) {
                    this.highField = value;
                    this.RaisePropertyChanged("high");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int initialValue {
            get {
                return this.initialValueField;
            }
            set {
                if ((this.initialValueField.Equals(value) != true)) {
                    this.initialValueField = value;
                    this.RaisePropertyChanged("initialValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int low {
            get {
                return this.lowField;
            }
            set {
                if ((this.lowField.Equals(value) != true)) {
                    this.lowField = value;
                    this.RaisePropertyChanged("low");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                if ((object.ReferenceEquals(this.unitsField, value) != true)) {
                    this.unitsField = value;
                    this.RaisePropertyChanged("units");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Driver", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    public enum Driver : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SimulationDriver = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RealTimeDriver = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutputDriver = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alarm", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    [System.SerializableAttribute()]
    public partial class Alarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ceilingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int floorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ceiling {
            get {
                return this.ceilingField;
            }
            set {
                if ((this.ceilingField.Equals(value) != true)) {
                    this.ceilingField = value;
                    this.RaisePropertyChanged("ceiling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int floor {
            get {
                return this.floorField;
            }
            set {
                if ((this.floorField.Equals(value) != true)) {
                    this.floorField = value;
                    this.RaisePropertyChanged("floor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagAttribute", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    public enum TagAttribute : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tagId = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        description = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        driver = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ioAddress = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        scanTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        alarm = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        on = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        auto = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        initialValue = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        low = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        high = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        units = 11,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimulationUnit", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    [System.SerializableAttribute()]
    public partial struct SimulationUnit : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RealTimeUnit.ServiceReference1.functionType fTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int address {
            get {
                return this.addressField;
            }
            set {
                if ((this.addressField.Equals(value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RealTimeUnit.ServiceReference1.functionType fType {
            get {
                return this.fTypeField;
            }
            set {
                if ((this.fTypeField.Equals(value) != true)) {
                    this.fTypeField = value;
                    this.RaisePropertyChanged("fType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBEntry", Namespace="http://schemas.datacontract.org/2004/07/ScadaModels")]
    [System.SerializableAttribute()]
    public partial class DBEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tagIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tagId {
            get {
                return this.tagIdField;
            }
            set {
                if ((object.ReferenceEquals(this.tagIdField, value) != true)) {
                    this.tagIdField = value;
                    this.RaisePropertyChanged("tagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                if ((this.timeStampField.Equals(value) != true)) {
                    this.timeStampField = value;
                    this.RaisePropertyChanged("timeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRealTimeUnit")]
    public interface IRealTimeUnit {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealTimeUnit/initialize", ReplyAction="http://tempuri.org/IRealTimeUnit/initializeResponse")]
        bool initialize(string id, string publicKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealTimeUnit/initialize", ReplyAction="http://tempuri.org/IRealTimeUnit/initializeResponse")]
        System.Threading.Tasks.Task<bool> initializeAsync(string id, string publicKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealTimeUnit/writeValue", ReplyAction="http://tempuri.org/IRealTimeUnit/writeValueResponse")]
        bool writeValue(string id, int address, double value, byte[] signature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealTimeUnit/writeValue", ReplyAction="http://tempuri.org/IRealTimeUnit/writeValueResponse")]
        System.Threading.Tasks.Task<bool> writeValueAsync(string id, int address, double value, byte[] signature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealTimeUnit/deinitialize", ReplyAction="http://tempuri.org/IRealTimeUnit/deinitializeResponse")]
        void deinitialize(string id, byte[] signature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealTimeUnit/deinitialize", ReplyAction="http://tempuri.org/IRealTimeUnit/deinitializeResponse")]
        System.Threading.Tasks.Task deinitializeAsync(string id, byte[] signature);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRealTimeUnitChannel : RealTimeUnit.ServiceReference1.IRealTimeUnit, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RealTimeUnitClient : System.ServiceModel.ClientBase<RealTimeUnit.ServiceReference1.IRealTimeUnit>, RealTimeUnit.ServiceReference1.IRealTimeUnit {
        
        public RealTimeUnitClient() {
        }
        
        public RealTimeUnitClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RealTimeUnitClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RealTimeUnitClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RealTimeUnitClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool initialize(string id, string publicKey) {
            return base.Channel.initialize(id, publicKey);
        }
        
        public System.Threading.Tasks.Task<bool> initializeAsync(string id, string publicKey) {
            return base.Channel.initializeAsync(id, publicKey);
        }
        
        public bool writeValue(string id, int address, double value, byte[] signature) {
            return base.Channel.writeValue(id, address, value, signature);
        }
        
        public System.Threading.Tasks.Task<bool> writeValueAsync(string id, int address, double value, byte[] signature) {
            return base.Channel.writeValueAsync(id, address, value, signature);
        }
        
        public void deinitialize(string id, byte[] signature) {
            base.Channel.deinitialize(id, signature);
        }
        
        public System.Threading.Tasks.Task deinitializeAsync(string id, byte[] signature) {
            return base.Channel.deinitializeAsync(id, signature);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDisplay")]
    public interface IDisplay {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDisplay/readDisplayValues", ReplyAction="http://tempuri.org/IDisplay/readDisplayValuesResponse")]
        string readDisplayValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDisplay/readDisplayValues", ReplyAction="http://tempuri.org/IDisplay/readDisplayValuesResponse")]
        System.Threading.Tasks.Task<string> readDisplayValuesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDisplayChannel : RealTimeUnit.ServiceReference1.IDisplay, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayClient : System.ServiceModel.ClientBase<RealTimeUnit.ServiceReference1.IDisplay>, RealTimeUnit.ServiceReference1.IDisplay {
        
        public DisplayClient() {
        }
        
        public DisplayClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DisplayClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DisplayClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DisplayClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string readDisplayValues() {
            return base.Channel.readDisplayValues();
        }
        
        public System.Threading.Tasks.Task<string> readDisplayValuesAsync() {
            return base.Channel.readDisplayValuesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDatabaseManager")]
    public interface IDatabaseManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/addNewSimulationDriverUnit", ReplyAction="http://tempuri.org/IDatabaseManager/addNewSimulationDriverUnitResponse")]
        bool addNewSimulationDriverUnit(string id, RealTimeUnit.ServiceReference1.functionType fType, int address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/addNewSimulationDriverUnit", ReplyAction="http://tempuri.org/IDatabaseManager/addNewSimulationDriverUnitResponse")]
        System.Threading.Tasks.Task<bool> addNewSimulationDriverUnitAsync(string id, RealTimeUnit.ServiceReference1.functionType fType, int address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/removeSimulationDriverUnit", ReplyAction="http://tempuri.org/IDatabaseManager/removeSimulationDriverUnitResponse")]
        bool removeSimulationDriverUnit(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/removeSimulationDriverUnit", ReplyAction="http://tempuri.org/IDatabaseManager/removeSimulationDriverUnitResponse")]
        System.Threading.Tasks.Task<bool> removeSimulationDriverUnitAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/addTag", ReplyAction="http://tempuri.org/IDatabaseManager/addTagResponse")]
        bool addTag(RealTimeUnit.ServiceReference1.Tag t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/addTag", ReplyAction="http://tempuri.org/IDatabaseManager/addTagResponse")]
        System.Threading.Tasks.Task<bool> addTagAsync(RealTimeUnit.ServiceReference1.Tag t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/removeTag", ReplyAction="http://tempuri.org/IDatabaseManager/removeTagResponse")]
        bool removeTag(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/removeTag", ReplyAction="http://tempuri.org/IDatabaseManager/removeTagResponse")]
        System.Threading.Tasks.Task<bool> removeTagAsync(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/changeTag", ReplyAction="http://tempuri.org/IDatabaseManager/changeTagResponse")]
        bool changeTag(string tagID, System.Collections.Generic.Dictionary<RealTimeUnit.ServiceReference1.TagAttribute, object> changes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/changeTag", ReplyAction="http://tempuri.org/IDatabaseManager/changeTagResponse")]
        System.Threading.Tasks.Task<bool> changeTagAsync(string tagID, System.Collections.Generic.Dictionary<RealTimeUnit.ServiceReference1.TagAttribute, object> changes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/getTags", ReplyAction="http://tempuri.org/IDatabaseManager/getTagsResponse")]
        System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> getTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/getTags", ReplyAction="http://tempuri.org/IDatabaseManager/getTagsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag>> getTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/getUnits", ReplyAction="http://tempuri.org/IDatabaseManager/getUnitsResponse")]
        System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.SimulationUnit> getUnits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/getUnits", ReplyAction="http://tempuri.org/IDatabaseManager/getUnitsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.SimulationUnit>> getUnitsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseManagerChannel : RealTimeUnit.ServiceReference1.IDatabaseManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseManagerClient : System.ServiceModel.ClientBase<RealTimeUnit.ServiceReference1.IDatabaseManager>, RealTimeUnit.ServiceReference1.IDatabaseManager {
        
        public DatabaseManagerClient() {
        }
        
        public DatabaseManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addNewSimulationDriverUnit(string id, RealTimeUnit.ServiceReference1.functionType fType, int address) {
            return base.Channel.addNewSimulationDriverUnit(id, fType, address);
        }
        
        public System.Threading.Tasks.Task<bool> addNewSimulationDriverUnitAsync(string id, RealTimeUnit.ServiceReference1.functionType fType, int address) {
            return base.Channel.addNewSimulationDriverUnitAsync(id, fType, address);
        }
        
        public bool removeSimulationDriverUnit(string id) {
            return base.Channel.removeSimulationDriverUnit(id);
        }
        
        public System.Threading.Tasks.Task<bool> removeSimulationDriverUnitAsync(string id) {
            return base.Channel.removeSimulationDriverUnitAsync(id);
        }
        
        public bool addTag(RealTimeUnit.ServiceReference1.Tag t) {
            return base.Channel.addTag(t);
        }
        
        public System.Threading.Tasks.Task<bool> addTagAsync(RealTimeUnit.ServiceReference1.Tag t) {
            return base.Channel.addTagAsync(t);
        }
        
        public bool removeTag(string tagID) {
            return base.Channel.removeTag(tagID);
        }
        
        public System.Threading.Tasks.Task<bool> removeTagAsync(string tagID) {
            return base.Channel.removeTagAsync(tagID);
        }
        
        public bool changeTag(string tagID, System.Collections.Generic.Dictionary<RealTimeUnit.ServiceReference1.TagAttribute, object> changes) {
            return base.Channel.changeTag(tagID, changes);
        }
        
        public System.Threading.Tasks.Task<bool> changeTagAsync(string tagID, System.Collections.Generic.Dictionary<RealTimeUnit.ServiceReference1.TagAttribute, object> changes) {
            return base.Channel.changeTagAsync(tagID, changes);
        }
        
        public System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> getTags() {
            return base.Channel.getTags();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag>> getTagsAsync() {
            return base.Channel.getTagsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.SimulationUnit> getUnits() {
            return base.Channel.getUnits();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.SimulationUnit>> getUnitsAsync() {
            return base.Channel.getUnitsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAlarmer", CallbackContract=typeof(RealTimeUnit.ServiceReference1.IAlarmerCallback))]
    public interface IAlarmer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmer/AlarmerInit", ReplyAction="http://tempuri.org/IAlarmer/AlarmerInitResponse")]
        void AlarmerInit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmer/AlarmerInit", ReplyAction="http://tempuri.org/IAlarmer/AlarmerInitResponse")]
        System.Threading.Tasks.Task AlarmerInitAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAlarmer/OnAlarm")]
        void OnAlarm(RealTimeUnit.ServiceReference1.Tag t, double value, System.DateTime timeStamp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmerChannel : RealTimeUnit.ServiceReference1.IAlarmer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmerClient : System.ServiceModel.DuplexClientBase<RealTimeUnit.ServiceReference1.IAlarmer>, RealTimeUnit.ServiceReference1.IAlarmer {
        
        public AlarmerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AlarmerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AlarmerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AlarmerInit() {
            base.Channel.AlarmerInit();
        }
        
        public System.Threading.Tasks.Task AlarmerInitAsync() {
            return base.Channel.AlarmerInitAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITrendingPublisher")]
    public interface ITrendingPublisher {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/sendOutputSignal", ReplyAction="http://tempuri.org/ITrendingPublisher/sendOutputSignalResponse")]
        bool sendOutputSignal(int address, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/sendOutputSignal", ReplyAction="http://tempuri.org/ITrendingPublisher/sendOutputSignalResponse")]
        System.Threading.Tasks.Task<bool> sendOutputSignalAsync(int address, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/sendManualInputSignal", ReplyAction="http://tempuri.org/ITrendingPublisher/sendManualInputSignalResponse")]
        bool sendManualInputSignal(int address, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/sendManualInputSignal", ReplyAction="http://tempuri.org/ITrendingPublisher/sendManualInputSignalResponse")]
        System.Threading.Tasks.Task<bool> sendManualInputSignalAsync(int address, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/getTagsDict", ReplyAction="http://tempuri.org/ITrendingPublisher/getTagsDictResponse")]
        System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> getTagsDict();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/getTagsDict", ReplyAction="http://tempuri.org/ITrendingPublisher/getTagsDictResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag>> getTagsDictAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/getEntries", ReplyAction="http://tempuri.org/ITrendingPublisher/getEntriesResponse")]
        RealTimeUnit.ServiceReference1.DBEntry[] getEntries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/getEntries", ReplyAction="http://tempuri.org/ITrendingPublisher/getEntriesResponse")]
        System.Threading.Tasks.Task<RealTimeUnit.ServiceReference1.DBEntry[]> getEntriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/ScanHappened", ReplyAction="http://tempuri.org/ITrendingPublisher/ScanHappenedResponse")]
        void ScanHappened(RealTimeUnit.ServiceReference1.Tag t, double value, System.DateTime timeStamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/ScanHappened", ReplyAction="http://tempuri.org/ITrendingPublisher/ScanHappenedResponse")]
        System.Threading.Tasks.Task ScanHappenedAsync(RealTimeUnit.ServiceReference1.Tag t, double value, System.DateTime timeStamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/DictChanged", ReplyAction="http://tempuri.org/ITrendingPublisher/DictChangedResponse")]
        void DictChanged(System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> tagsDict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingPublisher/DictChanged", ReplyAction="http://tempuri.org/ITrendingPublisher/DictChangedResponse")]
        System.Threading.Tasks.Task DictChangedAsync(System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> tagsDict);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrendingPublisherChannel : RealTimeUnit.ServiceReference1.ITrendingPublisher, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrendingPublisherClient : System.ServiceModel.ClientBase<RealTimeUnit.ServiceReference1.ITrendingPublisher>, RealTimeUnit.ServiceReference1.ITrendingPublisher {
        
        public TrendingPublisherClient() {
        }
        
        public TrendingPublisherClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrendingPublisherClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrendingPublisherClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrendingPublisherClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool sendOutputSignal(int address, double value) {
            return base.Channel.sendOutputSignal(address, value);
        }
        
        public System.Threading.Tasks.Task<bool> sendOutputSignalAsync(int address, double value) {
            return base.Channel.sendOutputSignalAsync(address, value);
        }
        
        public bool sendManualInputSignal(int address, double value) {
            return base.Channel.sendManualInputSignal(address, value);
        }
        
        public System.Threading.Tasks.Task<bool> sendManualInputSignalAsync(int address, double value) {
            return base.Channel.sendManualInputSignalAsync(address, value);
        }
        
        public System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> getTagsDict() {
            return base.Channel.getTagsDict();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag>> getTagsDictAsync() {
            return base.Channel.getTagsDictAsync();
        }
        
        public RealTimeUnit.ServiceReference1.DBEntry[] getEntries() {
            return base.Channel.getEntries();
        }
        
        public System.Threading.Tasks.Task<RealTimeUnit.ServiceReference1.DBEntry[]> getEntriesAsync() {
            return base.Channel.getEntriesAsync();
        }
        
        public void ScanHappened(RealTimeUnit.ServiceReference1.Tag t, double value, System.DateTime timeStamp) {
            base.Channel.ScanHappened(t, value, timeStamp);
        }
        
        public System.Threading.Tasks.Task ScanHappenedAsync(RealTimeUnit.ServiceReference1.Tag t, double value, System.DateTime timeStamp) {
            return base.Channel.ScanHappenedAsync(t, value, timeStamp);
        }
        
        public void DictChanged(System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> tagsDict) {
            base.Channel.DictChanged(tagsDict);
        }
        
        public System.Threading.Tasks.Task DictChangedAsync(System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> tagsDict) {
            return base.Channel.DictChangedAsync(tagsDict);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITrendingSubscriber", CallbackContract=typeof(RealTimeUnit.ServiceReference1.ITrendingSubscriberCallback))]
    public interface ITrendingSubscriber {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingSubscriber/TrendingSubscriberInit", ReplyAction="http://tempuri.org/ITrendingSubscriber/TrendingSubscriberInitResponse")]
        void TrendingSubscriberInit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrendingSubscriber/TrendingSubscriberInit", ReplyAction="http://tempuri.org/ITrendingSubscriber/TrendingSubscriberInitResponse")]
        System.Threading.Tasks.Task TrendingSubscriberInitAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrendingSubscriberCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITrendingSubscriber/OnScan")]
        void OnScan(RealTimeUnit.ServiceReference1.Tag t, double value, System.DateTime timeStamp);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITrendingSubscriber/OnTagsDictChanged")]
        void OnTagsDictChanged(System.Collections.Generic.Dictionary<string, RealTimeUnit.ServiceReference1.Tag> tagsDict);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrendingSubscriberChannel : RealTimeUnit.ServiceReference1.ITrendingSubscriber, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrendingSubscriberClient : System.ServiceModel.DuplexClientBase<RealTimeUnit.ServiceReference1.ITrendingSubscriber>, RealTimeUnit.ServiceReference1.ITrendingSubscriber {
        
        public TrendingSubscriberClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public TrendingSubscriberClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public TrendingSubscriberClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TrendingSubscriberClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TrendingSubscriberClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void TrendingSubscriberInit() {
            base.Channel.TrendingSubscriberInit();
        }
        
        public System.Threading.Tasks.Task TrendingSubscriberInitAsync() {
            return base.Channel.TrendingSubscriberInitAsync();
        }
    }
}
